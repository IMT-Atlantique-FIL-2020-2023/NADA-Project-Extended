# Graphql-faker schema definition. Source : https://github.com/APIs-guru/graphql-faker/blob/2775f1580a6cbe9d2fdf4a823a1374cbbbe3514c/src/fake_definition.ts
enum fake__Locale {
  az
  cz
  de
  de_AT
  de_CH
  en
  en_AU
  en_BORK
  en_CA
  en_GB
  en_IE
  en_IND
  en_US
  en_au_ocker
  es
  es_MX
  fa
  fr
  fr_CA
  ge
  id_ID
  it
  ja
  ko
  nb_NO
  nep
  nl
  pl
  pt_BR
  ru
  sk
  sv
  tr
  uk
  vi
  zh_CN
  zh_TW
}
enum fake__Types {
  zipCode
  city
  streetName
  streetAddress
  secondaryAddress
  county
  country
  countryCode
  state
  stateAbbr
  latitude
  longitude
  colorName
  productCategory
  productName
  money
  productMaterial
  product
  companyName
  companyCatchPhrase
  companyBS
  dbColumn
  dbType
  dbCollation
  dbEngine
  """
  By default returns dates beetween 2000-01-01 and 2030-01-01.
  Configure date format with options \`dateFormat\` \`dateFrom\` \`dateTo\`.
  """
  date
  pastDate
  futureDate
  recentDate
  financeAccountName
  financeTransactionType
  currencyCode
  currencyName
  currencySymbol
  bitcoinAddress
  internationalBankAccountNumber
  bankIdentifierCode
  hackerAbbreviation
  hackerPhrase
  imageUrl
  avatarUrl
  email
  url
  domainName
  ipv4Address
  ipv6Address
  userAgent
  colorHex
  macAddress
  password
  lorem
  firstName
  lastName
  fullName
  jobTitle
  phoneNumber
  number
  uuid
  word
  words
  locale
  filename
  mimeType
  fileExtension
  semver
}
input fake__imageSize {
  width: Int!
  height: Int!
}
enum fake__loremSize {
  word
  words
  sentence
  sentences
  paragraph
  paragraphs
}
input fake__color {
  red255: Int = 0
  green255: Int = 0
  blue255: Int = 0
}
input fake__options {
  useFullAddress: Boolean
  minMoney: Float
  maxMoney: Float
  decimalPlaces: Int
  imageSize: fake__imageSize
  imageKeywords: [String!]
  randomizeImageUrl: Boolean
  emailProvider: String
  passwordLength: Int
  loremSize: fake__loremSize
  dateFormat: String = "YYYY-MM-DDTHH:mm:ss[Z]"
  dateFrom: String = "2010-01-01"
  dateTo: String = "2030-01-01"
  baseColor: fake__color = { red255: 0, green255: 0, blue255: 0 }
  minNumber: Float
  maxNumber: Float
  precisionNumber: Float
}
directive @fake(
  type: fake__Types!
  options: fake__options = {}
  locale: fake__Locale
) on FIELD_DEFINITION | SCALAR
directive @listLength(min: Int!, max: Int!) on FIELD_DEFINITION
scalar examples__JSON
directive @examples(values: [examples__JSON]!) on FIELD_DEFINITION | SCALAR
